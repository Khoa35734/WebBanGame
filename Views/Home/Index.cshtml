@model IEnumerable<WebBanGame.Models.SanPham>
@{
    ViewData["Title"] = "Home Page";
}

<!-- Image Slider -->
<div class="custom-slider-container">
    <div class="custom-slider-slide">
        <img src="~/images/miside.jpg" alt="Game 4" />
    </div>
    <div class="custom-slider-slide active">
        <img src="~/images/banner1.jpg" alt="Mandragora" />
    </div>
    <div class="custom-slider-slide">
        <img src="~/images/GOT.jpg" alt="Game 2" />
    </div>
    <div class="custom-slider-slide">
        <img src="~/images/re4.jpg" alt="Game 3" />
    </div>
    <button class="custom-slider-arrow left" onclick="sliderPrev()">
        <span>&lt;</span>
    </button>
    <button class="custom-slider-arrow right" onclick="sliderNext()">
        <span>&gt;</span>
    </button>
    <div class="custom-slider-dots"></div>
</div>

<!-- content -->
<div class="content">
    <div style="background: #eef7fd;">
        <div class="section-title"> <span>GAMES</span> HOT </div>
        <div class="game-list-header">
            <div></div>
            <a href="@Url.Action("BestSellerList", "SanPham")">Xem tất cả &gt;</a>
        </div>
        <hr class="section-title-bar" />
        <div class="games-grid">
            @foreach (var game in Model.OrderBy(g => g.MaSp).Take(6))
            {
                var tag = game.MaSp % 2 == 0 ? "tag-build" : "tag-new";
                var tagText = game.MaSp % 2 == 0 ? $"Build {game.MaSp}" : "GAME HOT";
                var updateDate = game.NgaySua.ToString("dd/MM/yyyy");
                <a href="@Url.Action("Details", "SanPham", new { id = game.MaSp })" class="game-card-link">
                    <div class="game-card">
                        <img class="game-thumb" src="@game.AnhSp" alt="@game.TenSp" />
                        <div class="game-tags">
                            <span class="@tag">@tagText</span>
                            <span class="tag-update">Update: @updateDate</span>
                        </div>
                        <div class="game-title">@game.TenSp</div>
                        <div class="game-meta">
                            <i class="fa fa-gamepad"></i>
                           @if (game.DanhMucs != null && game.DanhMucs.Any())
{
    <span>
        @string.Join(", ", game.DanhMucs.Select(dm => dm.TenDm))
    </span>
}
else
{
    <span>Không có danh mục</span>
}
                        </div>
                        <div class="game-actions">
                            <div class="btn-download"><i class="fa fa-download"></i> @game.GiaSp.ToString("#,##0") VNĐ</div>
                            <div class="score-badge"><i class="fa fa-star"></i> Xem Chi tiết</div>
                        </div>
                    </div>
                </a>
            }
        </div>
    </div>

    <div style="background: #eef7fd;">
        <div class="section-title"> <span>GAMES</span> </div>
        <div class="game-list-header">
            <div></div>
            <a href="/SanPham/Index">Xem tất cả &gt;</a>
        </div>
        <hr class="section-title-bar" />
        <div class="games-grid">
            @foreach (var game in Model)
            {
                var tag = game.MaSp % 2 == 0 ? "tag-build" : "tag-new";
                var tagText = game.MaSp % 2 == 0 ? $"Build {game.MaSp}" : "GAME";
                var updateDate = game.NgaySua.ToString("dd/MM/yyyy");
                <a href="@Url.Action("Details", "SanPham", new { id = game.MaSp })" class="game-card-link">
                    <div class="game-card">
                        <img class="game-thumb" src="@game.AnhSp" alt="@game.TenSp" />
                        <div class="game-tags">
                            <span class="@tag">@tagText</span>
                            <span class="tag-update">Update: @updateDate</span>
                        </div>
                        <div class="game-title">@game.TenSp</div>
                        <div class="game-meta">
                            <i class="fa fa-gamepad"></i>
                          @if (game.DanhMucs != null && game.DanhMucs.Any())
{
    <span>
        @string.Join(", ", game.DanhMucs.Select(dm => dm.TenDm))
    </span>
}
else
{
    <span>Không có danh mục</span>
}
                        </div>
                        <div class="game-actions">
                            <div class="btn-download"><i class="fa fa-download"></i> @game.GiaSp.ToString("#,##0") VNĐ</div>
                            <div class="score-badge"><i class="fa fa-star"></i> Xem Chi tiết</div>
                        </div>
                    </div>
                </a>
            }
        </div>
    </div>
</div>

<!-- poster -->
<div class="poster">
    <div class="container">
        <div class="poster-info">
            <h3>Đắm chìm trong thế giới game li kì đầy màu sắc.</h3>
            <p>Web Game Bản Quyền Uy Tín Số 1 Việt Nam</p>
            <a class="hvr-bounce-to-bottom" href="reviews.html">Xem Thêm</a>
        </div>
    </div>
</div>

<style>
    a {
        text-decoration: none;
    }
    a:hover {
        text-decoration: none;
    }
    .custom-slider-container {
        position: relative;
        width: 100%;
        max-width: 1200px;
        margin: 0 auto;
        overflow: hidden;
        border-radius: 20px;
        box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);
        height: 400px;
    }
    .custom-slider-slide {
        position: absolute;
        top: 0; left: 0;
        width: 100%; height: 100%;
        opacity: 0;
        transition: opacity 0.7s cubic-bezier(0.4,0,0.2,1);
        z-index: 1;
        pointer-events: none;
    }
    .custom-slider-slide.active {
        opacity: 1;
        z-index: 2;
        pointer-events: auto;
    }
    .custom-slider-slide img {
        width: 100%;
        height: 100%;
        object-fit: cover;
        border-radius: 20px;
    }
    .custom-slider-arrow {
        position: absolute;
        top: 50%;
        transform: translateY(-50%);
        background: rgba(0, 0, 0, 0.5);
        color: white;
        border: none;
        border-radius: 50%;
        width: 40px;
        height: 40px;
        cursor: pointer;
        display: flex;
        align-items: center;
        justify-content: center;
        z-index: 10;
    }
    .custom-slider-arrow.left { left: 10px; }
    .custom-slider-arrow.right { right: 10px; }
    .custom-slider-arrow:hover {
        box-shadow: 0 4px 12px rgba(0,0,0,0.18);
    }
    .custom-slider-dots {
        position: absolute;
        bottom: 10px;
        left: 50%;
        transform: translateX(-50%);
        display: flex;
        gap: 10px;
    }
    .custom-slider-dots span {
        width: 10px;
        height: 10px;
        background: rgba(255,255,255,0.5);
        border-radius: 50%;
        cursor: pointer;
        transition: background 0.3s;
    }
    .custom-slider-dots span.active { background: white; }
    body {
        background: #eef7fd;
        font-family: 'Segoe UI', Arial, sans-serif;
        margin: 0; padding: 0;
    }
    .section-title {
        font-size: 1.6rem;
        font-weight: bold;
        color: #ff6241;
        margin: 32px 0 10px 24px;
        letter-spacing: 1px;
        display: flex;
        align-items: center;
        gap: 10px;
    }
    .section-title span {
        color: #232b40;
        font-size: 1.6rem;
        font-weight: bold;
    }
    .section-title-bar {
        border: none;
        border-top: 4px solid #ff6241;
        margin: 0 24px 18px 24px;
        width: 100%;
        max-width: 1100px;
    }
    .game-list-header {
        display: flex;
        justify-content: space-between;
        align-items: center;
        margin: 0 24px;
    }
    .game-list-header a {
        color: #1a94ff;
        font-weight: bold;
        font-size: 1rem;
        transition: color 0.2s;
    }
    .game-thumb {
        width: 130px;
        height: auto;
        border-radius: 12px 12px 12px 12px;
        transition: transform 0.3s ease, border-radius 0.3s ease;
        object-fit: cover;
    }
    .game-card:hover .game-thumb {
        transform: scale(1.05);
        border-radius: 12px 12px 20px 20px;
    }
    .game-list-header a:hover {
        color: #ff6241;
    }
    .games-grid {
        display: grid;
        grid-template-columns: repeat(auto-fit, minmax(320px, 1fr));
        gap: 24px;
        padding: 0 24px 24px 24px;
        text-decoration: none;
    }
    .game-card {
        background: #fff;
        border-radius: 12px;
        box-shadow: 0 4px 12px rgba(36,37,38,0.1);
        padding: 15px;
        transition: box-shadow 0.3s ease, transform 0.3s ease;
        display: flex;
        flex-direction: column;
        min-height: 320px;
        position: relative;
        overflow: hidden;
        border: 1px solid #e6e6e6;
    }
    .game-card:hover {
        box-shadow: 0 6px 18px 0 rgba(36,37,38,.13);
    }
    .game-thumb {
        width: 100%;
        aspect-ratio: 16/9;
        object-fit: cover;
        border-radius: 12px 12px 0 0;
    }
    .game-tags {
        display: flex;
        gap: 8px;
        margin-top: 10px;
        margin-left: 12px;
        align-items: center;
        flex-wrap: wrap;
    }
    .tag-build, .tag-ver, .tag-new {
        font-size: 0.89rem;
        font-weight: bold;
        background: #45e081;
        color: #fff;
        border-radius: 6px;
        padding: 2px 10px;
        display: inline-block;
    }
    .tag-build { background: #63e6c6; }
    .tag-ver { background: #8ee6ff; color: #232b40; }
    .tag-new { background: #45e081; }
    .tag-update {
        font-size: 0.87rem;
        color: #2666b2;
        background: #e3f2ff;
        border-radius: 5px;
        padding: 2px 8px;
        margin-left: 8px;
        font-weight: 600;
    }
    .game-title {
        font-size: 1.13rem;
        font-weight: bold;
        color: #204080;
        margin: 10px 0 5px 12px;
        text-decoration: none;
        display: block;
        min-height: 33px;
    }
    .game-meta {
        font-size: 0.98rem;
        color: #406080;
        margin: 0 0 8px 12px;
        min-height: 40px;
    }
    .game-meta i {
        color: #ff9f31;
        margin-right: 4px;
    }
    .game-actions {
        display: flex;
        justify-content: flex-start;
        align-items: center;
        gap: 10px;
        margin: 0 0 0 12px;
        text-decoration: none;
    }
    .btn-download {
        background: #232b40;
        color: #fff;
        border: none;
        border-radius: 7px;
        padding: 8px 22px;
        font-size: 1rem;
        font-weight: bold;
        display: flex;
        align-items: center;
        gap: 8px;
        cursor: pointer;
        box-shadow: 0 2px 6px rgba(36,37,38,0.07);
        transition: background 0.18s;
        text-decoration: none;
    }
    .btn-download:hover {
        background: #ff6241;
    }
    .score-badge {
        background: #232b40;
        color: #ffcc2a;
        border: none;
        border-radius: 7px;
        padding: 8px 18px 8px 13px;
        font-size: 1rem;
        font-weight: bold;
        display: flex;
        align-items: center;
        gap: 6px;
        margin-left: 0;
        text-decoration: none;
    }
    .score-badge i {
        color: #ffcc2a;
        font-size: 1rem;
    }
</style>

<script>
    // Custom Slider - No jQuery needed
    document.addEventListener('DOMContentLoaded', function () {
        const sliderSlides = document.querySelectorAll('.custom-slider-slide');
        const sliderDotsContainer = document.querySelector('.custom-slider-dots');
        let sliderIndex = 0;
        let sliderTimer = null;

        // Dots setup
        sliderSlides.forEach((_, i) => {
            const dot = document.createElement('button');
            dot.className = 'custom-slider-dot' + (i === 0 ? ' active' : '');
            dot.onclick = () => sliderGoTo(i);
            sliderDotsContainer.appendChild(dot);
        });
        const sliderDots = document.querySelectorAll('.custom-slider-dot');

        function sliderShow(idx) {
            sliderIndex = (idx + sliderSlides.length) % sliderSlides.length;
            sliderSlides.forEach((s, i) => s.classList.toggle('active', i === sliderIndex));
            sliderDots.forEach((d, i) => d.classList.toggle('active', i === sliderIndex));
        }
        window.sliderPrev = function() { sliderShow(sliderIndex - 1); sliderResetTimer(); }
        window.sliderNext = function() { sliderShow(sliderIndex + 1); sliderResetTimer(); }
        window.sliderGoTo = function(idx) { sliderShow(idx); sliderResetTimer(); }
        function sliderStartTimer() {
            sliderTimer = setInterval(() => sliderShow(sliderIndex + 1), 5000);
        }
        function sliderResetTimer() {
            clearInterval(sliderTimer);
            sliderStartTimer();
        }
        sliderStartTimer();
    });
</script>